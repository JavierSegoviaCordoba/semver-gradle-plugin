public final class com/javiersc/semver/gradle/plugin/LazyVersion {
	public fun <init> (Lorg/gradle/api/provider/Provider;)V
	public fun toString ()Ljava/lang/String;
}

public abstract class com/javiersc/semver/gradle/plugin/SemverExtension {
	public static final field Companion Lcom/javiersc/semver/gradle/plugin/SemverExtension$Companion;
	public static final field extensionName Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;)V
	public abstract fun getGitDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getTagPrefix ()Lorg/gradle/api/provider/Property;
}

public final class com/javiersc/semver/gradle/plugin/SemverExtension$Companion {
}

public final class com/javiersc/semver/gradle/plugin/SemverPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class com/javiersc/semver/gradle/plugin/services/GitTagBuildService : java/lang/AutoCloseable, org/gradle/api/services/BuildService {
	public static final field Companion Lcom/javiersc/semver/gradle/plugin/services/GitTagBuildService$Companion;
	public fun <init> (Lorg/gradle/process/ExecOperations;)V
	public fun close ()V
	public final fun createTag (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun pushTag (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class com/javiersc/semver/gradle/plugin/services/GitTagBuildService$Companion {
}

public abstract interface class com/javiersc/semver/gradle/plugin/services/GitTagBuildService$Params : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getGitDirectory ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getRemoteProperty ()Lorg/gradle/api/provider/Property;
}

public abstract class com/javiersc/semver/gradle/plugin/tasks/SemverCreateTag : org/gradle/api/DefaultTask {
	public static final field taskName Ljava/lang/String;
	public fun <init> ()V
	public final fun run ()V
}

public abstract class com/javiersc/semver/gradle/plugin/tasks/SemverPrintTask : org/gradle/api/DefaultTask {
	public static final field taskName Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/ProjectLayout;)V
	public final fun getSemverFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getTagPrefix ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	public final fun run ()V
}

public abstract class com/javiersc/semver/gradle/plugin/tasks/SemverPushTag : org/gradle/api/DefaultTask {
	public static final field taskName Ljava/lang/String;
	public fun <init> ()V
	public final fun run ()V
}

public abstract class com/javiersc/semver/gradle/plugin/valuesources/VersionValueSource : org/gradle/api/provider/ValueSource {
	public static final field Companion Lcom/javiersc/semver/gradle/plugin/valuesources/VersionValueSource$Companion;
	public fun <init> ()V
	public synthetic fun obtain ()Ljava/lang/Object;
	public fun obtain ()Ljava/lang/String;
}

public final class com/javiersc/semver/gradle/plugin/valuesources/VersionValueSource$Companion {
}

public abstract interface class com/javiersc/semver/gradle/plugin/valuesources/VersionValueSource$Params : org/gradle/api/provider/ValueSourceParameters {
	public abstract fun getCheckClean ()Lorg/gradle/api/provider/Property;
	public abstract fun getCreatingSemverTag ()Lorg/gradle/api/provider/Property;
	public abstract fun getGitDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getProjectTagPrefix ()Lorg/gradle/api/provider/Property;
	public abstract fun getScopeProperty ()Lorg/gradle/api/provider/Property;
	public abstract fun getStageProperty ()Lorg/gradle/api/provider/Property;
	public abstract fun getTagPrefixProperty ()Lorg/gradle/api/provider/Property;
}

